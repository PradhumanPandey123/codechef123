A-Problem
#include<iostream>
#include<bits/stdc++.h>                                                                    
using namespace std;
void convert_binary(int x,vector<vector<char>>&store);                   
void solve();
int main(){
	int t;
	cin>>t;
	while(t--){
		solve();
	}
}
int k=0;
void convert_binary(int x,vector<vector<char>>&store){
	int n=store.size();
	int m=store[0].size();
     string str="";
	while(n){
		int x = n%2;
		n/=2;
		if(x==1){
			str+='1';
		}else{
			str+='0';
		}
	}
	reverse(str.begin(),str.end());  
	 	int p=0;
	 	for(int i=0;i<m;i++){
	 		store[k][i]=str[i];
		 }
		 k++;
	 
}
void solve(){
	int n,l;
	cin>>n>>l;	
    vector<vector<char>>store( n , vector<char> (l, 0));
	vector<int>vec(n);
	for(int i=0;i<n;i++)
	cin>>vec[i];
	for(int i=0;i<n;i++){
		convert_binary(vec[i],store);
	}
	vector<int>cal(l,0);
	     for(int i=0;i<n;i++){
	     		int count0=0;
	            int count1=0;
		for(int j=0;j<l;j++){
			if(store[i][j]=='1')
			count1++;
			else
			count0++;
		}
		if(count0>count1)
		cal.push_back(1);
		else
		cal.push_back(2);
	}
	int k=0;
	int ans=0;
	for(int i=cal.size()-1;i>=0;i--){
		if(cal[i]==2){
			ans+=pow(2,k);
		}
		k++;
	}
	cout<<ans<<endl;
	}
	
	
	
	
--------------------------SOLUTION CHECK-----------------------------------------
	
	
	
	
// Problem: A. Ancient Civilization
// Contest: Codeforces - Codeforces Round #765 (Div. 2)
// URL: https://codeforces.com/contest/1625/problem/A
// Memory Limit: 256 MB
// Time Limit: 1000 ms
 
#include <iostream>
#include <iosfwd>
#include <iomanip>
#include <cstdio>
#include <cstring>
#include <cstdlib>
#include <ctime>
#include <cmath>
#include <cassert>
#include <cctype>
#include <climits>
#include <vector>
#include <bitset>
#include <set>
#include <queue>
#include <math.h>
#include <stack>
#include <map>
#include <deque>
#include <string>
#include <list>
#include <iterator>
#include <sstream>
#include <complex>
#include <fstream>
#include <functional>
#include <numeric>
#include <utility>
#include <algorithm>
#include <assert.h>
#include <unordered_map>
#pragma GCC optimize ("-O3")
 
using namespace std;
 
#define watch(x) cout << (#x) << " = " << (x) << endl
#define PI double(2 * acos(0.0))
#define LL long long
#define MOD 1000000007
#define all(x) (x).begin(), (x).end()
#define INF 1e15
 
vector<int> decimalToBinary(long long number, long long l){
    //10 will become -> 00000000000001010
    vector<int> binary;
    while(number){
        binary.push_back(number % 2);
        number /= 2;
    }
    int left = l - binary.size();
    while(left--) binary.push_back(0);
    reverse(binary.begin(), binary.end());
    return binary;
}
 
int main()  {
    ios_base::sync_with_stdio(0);
    cin.tie(0);cout.tie(0);
    int t;
    cin >> t;
    while(t--)	{
    	int n, l;
    	cin >> n >> l;
    	int array[n];
    	vector<int> finalSum(l, 0);
    	vector<int> temp;
    	for(int i = 0; i < n; i++)	{
    		cin >> array[i];
    		temp = decimalToBinary(array[i], l);
    		for(int j = 0; j < temp.size(); j++)	{
    			finalSum[j] += temp[j];
    		}
    	}
    	vector<int> ans(l, 0);
    	for(int i = 0; i < l; i++)	{
    		if(finalSum[i] > (n/2))	{
    			ans[i] = 1;
    		} 
    	}
    	reverse(all(ans));
    	int finalAns = 0;
    	int power2 = 1;
    	for(int i = 0; i < l; i++)	{
    		finalAns += (power2*ans[i]);
    		power2 *= 2;
    	}
    	cout << finalAns << "\n";
    }
    return 0;
}
 
